# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: '3'

services:
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - app_network

  server:
    build:
      context: .
    ports:
      - "8501:8501"
    user: root
    env_file:
      - custom.env
    environment:
      - PIPE_DATA_PATH=./data/reglamentacion/
      - PIPE_COLLECTION_NAME=regulacion_alimentaria
      - PIPE_DB_ENDPOINT=https://60f9378e-8ae8-461c-a69b-d231d6d3617d.europe-west3-0.gcp.cloud.qdrant.io
      - PIPE_API_DB=jyih6sY9oQ-QvXp4WS7AtJ1euLBQl67vlxCF3UYv0upBGO6hlfOjmQ  # Leave empty if not using authentication
    networks:
      - app_network
    depends_on:
      - qdrant

  app:
    build: .
    environment:
      - PIPE_DB_ENDPOINT=https://60f9378e-8ae8-461c-a69b-d231d6d3617d.europe-west3-0.gcp.cloud.qdrant.io
      - PIPE_API_DB=jyih6sY9oQ-QvXp4WS7AtJ1euLBQl67vlxCF3UYv0upBGO6hlfOjmQ  # Leave empty if not using authentication
      - PIPE_COLLECTION_NAME=${PIPE_COLLECTION_NAME}
      - PIPE_DATA_PATH=${PIPE_DATA_PATH}
    networks:
      - app_network
    depends_on:
      - qdrant

networks:
  app_network:
    driver: bridge

volumes:
  qdrant_data:

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

